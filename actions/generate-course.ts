"use server"

import { generateCourseWithAI, type CourseGenerationData } from "@/lib/gemini"
import { saveCourse } from "@/lib/database"

export async function generateCourseAction(
  formData: CourseGenerationData,
  userId: string,
): Promise<{ success: boolean; course?: any; error?: string }> {
  try {
    console.log("Generating course for user:", userId)
    console.log("Form data:", formData)

    // Generate course with AI
    const generatedCourse = await generateCourseWithAI(formData)
    console.log("Course generated by AI:", generatedCourse.title)

    // Save to database
    const savedCourse = await saveCourse({
      title: generatedCourse.title,
      description: generatedCourse.description,
      duration: generatedCourse.duration,
      level: generatedCourse.level,
      format: formData.formato,
      lessons: generatedCourse.lessons,
      created_by: userId,
      is_public: true,
    })

    if (savedCourse) {
      console.log("Course saved to database:", savedCourse.id)
      return {
        success: true,
        course: {
          ...generatedCourse,
          id: savedCourse.id,
        },
      }
    } else {
      return {
        success: false,
        error: "Falha ao salvar curso no banco de dados",
      }
    }
  } catch (error) {
    console.error("Error in generateCourseAction:", error)
    return {
      success: false,
      error: error instanceof Error ? error.message : "Erro desconhecido",
    }
  }
}
